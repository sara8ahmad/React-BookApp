{"version":3,"sources":["BooksAPI.js","components/Boook.js","components/BookShelf.js","components/BookShelfes.js","components/FirstPage.js","components/Query.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","Boook","book","selectUsedShelf","className","style","width","height","backgroundImage","imageLinks","thumbnail","defaultValue","shelf","onChange","event","preventDefault","target","value","disabled","title","authors","BookShelf","bookItem","map","b","id","Shelfes","bookTitle","filter","Main","BookShelfes","onClick","console","log","to","Query","useState","query","setQuery","queryList","setQueryList","useEffect","timer","setTimeout","searchResult","maxResults","fetch","method","body","JSON","stringify","then","res","json","data","books","BooksAPI","error","undefined","bookSearched","forEach","mainBook","clearTimeout","type","placeholder","e","App","setBookItem","newBookList","old","path","FirstPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.510a208b.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import React from \"react\";\r\n\r\nconst Boook = ({book,selectUsedShelf}) => {\r\n\r\n\r\n  // Function to change the book shelf to the changed book shelf for book when changing its position.\r\n\r\n    const changeHandler= (event) =>{\r\n        event.preventDefault();\r\n        selectUsedShelf(book,event.target.value);\r\n        \r\n    };\r\n\r\n\r\n\r\n    return( \r\n    <div className=\"book\">\r\n    <div className=\"book-top\">\r\n      <div className=\"book-cover\"\r\n        style={{\r\n          width: 128,\r\n          height: 188,\r\n          backgroundImage: book.imageLinks ?`url(${book.imageLinks.thumbnail})` : \"\"}}></div> \r\n          \r\n            <div className=\"book-shelf-changer\">\r\n            <select defaultValue={book.shelf ?\r\n              book.shelf :\"none\"} onChange = {changeHandler}>\r\n        \r\n             <option value=\"moveTo\"disabled>\r\n                  Move to...\r\n              </option>\r\n              <option value=\"currentlyReading\">\r\n                Currently Reading\r\n              </option>\r\n              <option value=\"wantToRead\">Want to Read</option>\r\n              <option value=\"read\">Read</option>\r\n              <option value=\"none\">None</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n<div className=\"book-title\">{book.title}</div>\r\n<div className=\"book-authors\">{book.authors}</div>    \r\n     </div>)}\r\n     \r\n     export default Boook;\r\n\r\n     ","import React from \"react\";\r\nimport Boook from './Boook';\r\n\r\n\r\nconst BookShelf = ({bookItem,title,selectUsedShelf}) =>{\r\n\r\n    return(\r\n        <div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">{title}</h2>\r\n                <div className=\"bookshelf-books\">\r\n                  <ol className=\"books-grid\">\r\n                    { bookItem.map( b => (\r\n                            <li key={b.id}>\r\n                                <Boook book={b} selectUsedShelf={selectUsedShelf}/>\r\n                            </li>\r\n                            )) }\r\n                        </ol>\r\n                        </div>\r\n                        </div> )}\r\n\r\n\r\n  export default BookShelf;\r\n\r\n","import React from \"react\";\r\nimport BookShelf from \"./BookShelf\";\r\n\r\n\r\nconst Shelfes = ({bookItem,selectUsedShelf }) => {\r\n\r\n\r\n    // Making an array and saving each shelf in it.\r\n\r\n\r\n   const bookTitle = [];\r\n  \r\n\r\n    bookTitle[0] = bookItem.filter((book) => book.shelf ===\"currentlyReading\");\r\n    bookTitle[1] = bookItem.filter((book) => book.shelf === \"wantToRead\");\r\n    bookTitle[2] = bookItem.filter((book) => book.shelf === \"read\");\r\n\r\n  \r\n\r\nreturn(\r\n  <div>\r\n    \r\n        <BookShelf title=\"Currently Reading\" bookItem={bookTitle[0]} selectUsedShelf={selectUsedShelf} />\r\n        <BookShelf title=\"Want To Read\" bookItem={bookTitle[1]} selectUsedShelf={selectUsedShelf}  />\r\n        <BookShelf title=\"Read\" bookItem={bookTitle[2]} selectUsedShelf={selectUsedShelf}  />\r\n        \r\n  </div>\r\n)\r\n}\r\nexport default Shelfes;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookShelfes from \"./BookShelfes\";\r\n\r\n\r\n\r\nconst Main =({bookItem,selectUsedShelf}) =>{\r\n\r\n  // Function to know if the button clicked or not to route between pages.\r\n\r\n  const handleLinkClick = event => {\r\n    console.log('Link clicked');}\r\n\r\n    return(\r\n      <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n          <h1> MyReads </h1>\r\n          </div>\r\n        <div className=\"list-books-content\">\r\n          <BookShelfes bookItem={bookItem} selectUsedShelf={selectUsedShelf}/>\r\n        </div>\r\n        <div className=\"open-search\">\r\n          <Link onClick={handleLinkClick} to=\"/query\">Add a book</Link>\r\n      \r\n      </div>\r\n      </div>\r\n    );\r\n};\r\nexport default Main;","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport * as BooksAPI from '../BooksAPI';\r\nimport { Link } from \"react-router-dom\";\r\nimport Boook from \"./Boook\";\r\n\r\n\r\n\r\nconst Query = ({bookItem,selectUsedShelf}) => {\r\n\r\n  const[query,setQuery] =useState(\"\");\r\n  const [queryList,setQueryList]=useState([]);\r\n\r\n\r\n\r\n  // Timer used to delay the request from the client until finish writting to avoid many requests on the server API.\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout( ()=>{\r\n        \r\n\r\n        if(query) {\r\n            const searchResult =  BooksAPI.search(query);\r\n            searchResult.then((data) => {\r\n\r\n              // To avoid error result to not show to the client while searching if entered unvaild query.\r\n\r\n            if(data?.error || data === undefined){\r\n\r\n                setQueryList([]);\r\n            }\r\n\r\n            // To change the book shelf on the API result if it was in the Main page and avoid default value in select menu.\r\n\r\n\r\n            else {\r\n                data?.map((bookSearched) => {\r\n\r\n                    bookSearched.shelf =\"none\";\r\n\r\n                    bookItem.forEach ((mainBook) => {\r\n                        if (bookSearched.id === mainBook.id){\r\n            \r\n                            bookSearched.shelf = mainBook.shelf;\r\n                        }\r\n                    }\r\n                    )\r\n                    \r\n                });\r\n                setQueryList(data);\r\n            }})\r\n\r\n        }\r\n        else{\r\n            setQueryList([]);\r\n        }\r\n   \r\n    } ,300);\r\n\r\n    return () => { \r\n\r\n    clearTimeout(timer); } }, [query,bookItem]  );\r\n\r\n\r\n\r\n   \r\n        return( \r\n        <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to =\"/\">\r\n            <button className=\"close-search\">Close</button>\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n\r\n            <input type=\"text\" placeholder=\"Search by title or author\" \r\n            value={query} onChange={(e)=>{setQuery(e.target.value)}} />\r\n        \r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {queryList?.map(b => (\r\n                <li key={b.id}>\r\n                <Boook book={b} selectUsedShelf ={selectUsedShelf}/>\r\n                </li>)\r\n    \r\n            )}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n\r\n        );\r\n};\r\nexport default Query;\r\n\r\n","import React from 'react'\nimport \"./App.css\";\nimport { useState,useEffect } from \"react\";\nimport { BrowserRouter, BrowserRouter as Router,Route,Switch } from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport FirstPage from './components/FirstPage';\nimport Query from './components/Query';\n\nfunction App(){\n\n\n  const [bookItem, setBookItem] = useState ([]);\n\n  // Taking books from udacity API and saving it in the Main page.\n\n  useEffect (()=> {\n      BooksAPI.getAll()\n      .then ( data => {\n      setBookItem(data);\n      })\n });\n\n // This function used to update the Bookshelf after changing the book position.\n\n const selectUsedShelf = (book,shelf) =>{\n\n  BooksAPI.update(book,shelf);\n  console.log(book,shelf);\n  const newBookList = bookItem?.filter( (b)=> book.id === b.id);\n  console.log(newBookList)\n  setBookItem((old) => [...newBookList]);\n  console.log(setBookItem);\n\n };\n \nreturn (\n  \n  \n  <div className=\"app\">\n\n\n  <BrowserRouter>\n     \n  \n  <Switch>\n  \n  <Route path =\"/query\">\n\n      <Query bookItem ={bookItem} selectUsedShelf={selectUsedShelf} />\n  </Route>\n\n  <Route path =\"/\" > \n\n      <FirstPage bookItem={bookItem} selectUsedShelf={selectUsedShelf} />\n  </Route>\n\n</Switch>\n\n\n</BrowserRouter>\n</div>\n\n);\n}\n\nexport default App;\n\n\n\n           \n\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n  ,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}